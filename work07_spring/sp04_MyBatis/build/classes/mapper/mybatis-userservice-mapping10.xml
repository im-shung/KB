<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
마지막 mapping.xml 파일
완벽한 형태의 CRUD가 다 들어있다.
이거 하나만 있으면 기본적인 모든 내용 다 알 수 있다.
 
- CRUD
- 와일드카드
- null값 허용
- select :: resultMap & 정적/동적 쿼리
- sql 모듈화 :: sql & include
 -->

<mapper namespace="UserMapper10">
	<resultMap type="user" id="userSelectMap">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="age" column="age" />
		<result property="grade" column="grade" />
		<result property="regDate" column="reg_date" />
	</resultMap>

	<sql id="select-users">
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users
	</sql>
	<sql id="orderby-userid-desc">
		ORDER BY user_id DESC
	</sql>

	<!-- 추가  -->
	<insert id="addUser" parameterType="user">
		INSERT
		INTO users(user_id, user_name, password, age, grade, reg_date)
		VALUES(
		#{userId},
		#{userName},
		#{password},
		#{age},
		#{grade},
		#{regDate}
		)
	</insert>
	<update id="updateUser" parameterType="user">
		UPDATE users
		SET user_name = #{userName}
		WHERE user_id = #{userId}
	</update>
	<delete id="removeUser" parameterType="string">
		DELETE 
		FROM users
		WHERE user_id=#{VALUE}
	</delete>
	<select id="getUser" parameterType="string"
		resultMap="userSelectMap">
		<include refid="select-users"/>
		WHERE user_id = #{userId}
	</select>
	<select id="getUserList" parameterType="user"
		resultMap="userSelectMap">
		<include refid="select-users"/>
		<where> 
			<if test="userName != null">
				user_name LIKE #{userName}
			</if>
			<if test="age != null"> 
				OR age LIKE #{age} 
			</if>
		</where>
		<include refid="orderby-userid-desc"/>
	</select>

</mapper>